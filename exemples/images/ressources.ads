-- 
-- Generated by rca 18/12/2017 13:34:06
--

pragma Ada_95;

with Insa;
with Insa.Graphics;
with Insa.Graphics.Images;
with Insa.Audio;
with Insa.Audio.Synthesizer;

use Insa.Graphics.Images;
use Insa.Audio.Synthesizer;

package ressources is

    pragma Warnings (Off);

	Ananas_Data : aliased constant PACK_BITMAP :=
	(
		(16#0#,5),
		(16#44#,6),
		(16#0#,9),
		(16#44#,1),
		(16#D1#,6),
		(16#44#,1),
		(16#0#,12),
		(16#44#,1),
		(16#D1#,1),
		(16#0#,10),
		(16#4#,1),
		(16#10#,1),
		(16#24#,2),
		(16#48#,1),
		(16#6C#,1),
		(16#24#,3),
		(16#0#,6),
		(16#4#,1),
		(16#C#,1),
		(16#14#,1),
		(16#2C#,3),
		(16#48#,1),
		(16#2C#,2),
		(16#28#,1),
		(16#0#,6),
		(16#10#,1),
		(16#14#,1),
		(16#48#,1),
		(16#18#,2),
		(16#14#,1),
		(16#48#,1),
		(16#18#,2),
		(16#14#,1),
		(16#48#,1),
		(16#0#,4),
		(16#48#,4),
		(16#18#,2),
		(16#14#,1),
		(16#48#,1),
		(16#18#,2),
		(16#14#,1),
		(16#48#,1),
		(16#0#,4),
		(16#48#,1),
		(16#30#,1),
		(16#14#,2),
		(16#2C#,3),
		(16#48#,1),
		(16#2C#,3),
		(16#48#,1),
		(16#0#,4),
		(16#48#,1),
		(16#14#,1),
		(16#18#,2),
		(16#48#,1),
		(16#2C#,3),
		(16#48#,1),
		(16#2C#,3),
		(16#0#,4),
		(16#48#,1),
		(16#14#,1),
		(16#18#,2),
		(16#48#,1),
		(16#14#,1),
		(16#18#,2),
		(16#48#,1),
		(16#14#,1),
		(16#18#,2),
		(16#0#,4),
		(16#48#,1),
		(16#14#,2),
		(16#48#,2),
		(16#14#,1),
		(16#18#,2),
		(16#48#,1),
		(16#14#,1),
		(16#18#,2),
		(16#0#,5),
		(16#28#,1),
		(16#30#,1),
		(16#14#,2),
		(16#30#,1),
		(16#2C#,2),
		(16#48#,1),
		(16#14#,2),
		(16#2C#,1),
		(16#0#,5),
		(16#24#,1),
		(16#2C#,1),
		(16#18#,2),
		(16#2C#,1),
		(16#48#,1),
		(16#2C#,2),
		(16#30#,2),
		(16#24#,1),
		(16#0#,5),
		(16#24#,1),
		(16#2C#,1),
		(16#18#,2),
		(16#2C#,2),
		(16#18#,2),
		(16#2C#,1),
		(16#24#,1),
		(16#0#,8),
		(16#48#,3),
		(16#2C#,1),
		(16#18#,2),
		(16#8#,1),
		(16#0#,12),
		(16#4#,1),
		(16#8#,2),
		(16#0#,5)
	);

	Ananas_Data_Access : PACK_BITMAP_ACCESS := Ananas_Data'Access;

	Ananas : constant PACK_IMAGE :=
	(
		16, 16,
		Ananas_Data_Access
	);

	Cerise_Data : aliased constant PACK_BITMAP :=
	(
		(16#0#,13),
		(16#44#,2),
		(16#0#,13),
		(16#44#,1),
		(16#D1#,2),
		(16#44#,1),
		(16#0#,10),
		(16#D1#,5),
		(16#44#,1),
		(16#0#,7),
		(16#68#,1),
		(16#8C#,2),
		(16#44#,1),
		(16#AC#,2),
		(16#44#,2),
		(16#0#,7),
		(16#44#,1),
		(16#68#,1),
		(16#8C#,2),
		(16#0#,1),
		(16#8C#,2),
		(16#0#,9),
		(16#D1#,1),
		(16#44#,1),
		(16#0#,3),
		(16#8C#,2),
		(16#0#,5),
		(16#C0#,2),
		(16#C4#,1),
		(16#D1#,1),
		(16#0#,4),
		(16#D1#,1),
		(16#44#,1),
		(16#0#,4),
		(16#20#,1),
		(16#80#,1),
		(16#C0#,2),
		(16#C4#,1),
		(16#D1#,1),
		(16#80#,1),
		(16#20#,1),
		(16#0#,2),
		(16#D1#,1),
		(16#44#,1),
		(16#0#,4),
		(16#40#,1),
		(16#C0#,3),
		(16#C4#,1),
		(16#CC#,1),
		(16#C0#,1),
		(16#40#,1),
		(16#0#,1),
		(16#40#,1),
		(16#D1#,1),
		(16#64#,1),
		(16#20#,1),
		(16#0#,3),
		(16#40#,1),
		(16#C0#,6),
		(16#40#,2),
		(16#C0#,1),
		(16#D1#,1),
		(16#C4#,1),
		(16#80#,1),
		(16#0#,3),
		(16#40#,1),
		(16#C0#,1),
		(16#DB#,1),
		(16#C9#,1),
		(16#C0#,2),
		(16#0#,1),
		(16#80#,1),
		(16#C0#,2),
		(16#D1#,1),
		(16#C4#,1),
		(16#C0#,2),
		(16#0#,3),
		(16#40#,1),
		(16#C9#,1),
		(16#C0#,3),
		(16#0#,1),
		(16#80#,1),
		(16#C0#,2),
		(16#C4#,1),
		(16#C0#,3),
		(16#0#,4),
		(16#80#,4),
		(16#0#,1),
		(16#80#,1),
		(16#C0#,1),
		(16#C9#,1),
		(16#C0#,4),
		(16#0#,9),
		(16#80#,1),
		(16#C9#,1),
		(16#DB#,1),
		(16#C0#,4),
		(16#0#,10),
		(16#40#,1),
		(16#C0#,3),
		(16#80#,1),
		(16#0#,12),
		(16#40#,3),
		(16#20#,1),
		(16#0#,3)
	);

	Cerise_Data_Access : PACK_BITMAP_ACCESS := Cerise_Data'Access;

	Cerise : constant PACK_IMAGE :=
	(
		16, 16,
		Cerise_Data_Access
	);

	Melon_Data : aliased constant PACK_BITMAP :=
	(
		(16#0#,5),
		(16#44#,6),
		(16#0#,9),
		(16#44#,1),
		(16#D1#,6),
		(16#44#,1),
		(16#0#,12),
		(16#44#,1),
		(16#D1#,1),
		(16#0#,10),
		(16#4#,1),
		(16#10#,1),
		(16#24#,2),
		(16#48#,1),
		(16#6C#,1),
		(16#24#,3),
		(16#0#,6),
		(16#4#,1),
		(16#C#,1),
		(16#14#,1),
		(16#2C#,3),
		(16#48#,1),
		(16#2C#,2),
		(16#28#,1),
		(16#0#,6),
		(16#10#,1),
		(16#14#,1),
		(16#48#,1),
		(16#18#,2),
		(16#14#,1),
		(16#48#,1),
		(16#18#,2),
		(16#14#,1),
		(16#48#,1),
		(16#0#,4),
		(16#48#,4),
		(16#18#,2),
		(16#14#,1),
		(16#48#,1),
		(16#18#,2),
		(16#14#,1),
		(16#48#,1),
		(16#0#,4),
		(16#48#,1),
		(16#30#,1),
		(16#14#,2),
		(16#2C#,3),
		(16#48#,1),
		(16#2C#,3),
		(16#48#,1),
		(16#0#,4),
		(16#48#,1),
		(16#14#,1),
		(16#18#,2),
		(16#48#,1),
		(16#2C#,3),
		(16#48#,1),
		(16#2C#,3),
		(16#0#,4),
		(16#48#,1),
		(16#14#,1),
		(16#18#,2),
		(16#48#,1),
		(16#14#,1),
		(16#18#,2),
		(16#48#,1),
		(16#14#,1),
		(16#18#,2),
		(16#0#,4),
		(16#48#,1),
		(16#14#,2),
		(16#48#,2),
		(16#14#,1),
		(16#18#,2),
		(16#48#,1),
		(16#14#,1),
		(16#18#,2),
		(16#0#,5),
		(16#28#,1),
		(16#30#,1),
		(16#14#,2),
		(16#30#,1),
		(16#2C#,2),
		(16#48#,1),
		(16#14#,2),
		(16#2C#,1),
		(16#0#,5),
		(16#24#,1),
		(16#2C#,1),
		(16#18#,2),
		(16#2C#,1),
		(16#48#,1),
		(16#2C#,2),
		(16#30#,2),
		(16#24#,1),
		(16#0#,5),
		(16#24#,1),
		(16#2C#,1),
		(16#18#,2),
		(16#2C#,2),
		(16#18#,2),
		(16#2C#,1),
		(16#24#,1),
		(16#0#,8),
		(16#48#,3),
		(16#2C#,1),
		(16#18#,2),
		(16#8#,1),
		(16#0#,12),
		(16#4#,1),
		(16#8#,2),
		(16#0#,5)
	);

	Melon_Data_Access : PACK_BITMAP_ACCESS := Melon_Data'Access;

	Melon : constant PACK_IMAGE :=
	(
		16, 16,
		Melon_Data_Access
	);

	Orange_Data : aliased constant PACK_BITMAP :=
	(
		(16#0#,8),
		(16#8#,4),
		(16#0#,12),
		(16#18#,4),
		(16#0#,10),
		(16#8#,1),
		(16#18#,3),
		(16#10#,1),
		(16#0#,9),
		(16#AC#,2),
		(16#6C#,1),
		(16#8#,1),
		(16#18#,1),
		(16#C#,1),
		(16#28#,1),
		(16#AC#,1),
		(16#0#,7),
		(16#44#,1),
		(16#F4#,2),
		(16#D0#,1),
		(16#44#,1),
		(16#58#,1),
		(16#4C#,1),
		(16#8C#,1),
		(16#F4#,1),
		(16#44#,1),
		(16#0#,5),
		(16#44#,1),
		(16#F4#,10),
		(16#44#,1),
		(16#0#,3),
		(16#AC#,1),
		(16#F4#,12),
		(16#AC#,1),
		(16#0#,2),
		(16#AC#,1),
		(16#F4#,12),
		(16#AC#,1),
		(16#0#,2),
		(16#AC#,1),
		(16#F4#,12),
		(16#AC#,1),
		(16#0#,2),
		(16#AC#,1),
		(16#F4#,12),
		(16#AC#,1),
		(16#0#,2),
		(16#AC#,1),
		(16#F4#,12),
		(16#AC#,1),
		(16#0#,2),
		(16#24#,1),
		(16#8C#,1),
		(16#F4#,10),
		(16#8C#,1),
		(16#24#,1),
		(16#0#,3),
		(16#44#,1),
		(16#F4#,10),
		(16#44#,1),
		(16#0#,4),
		(16#44#,1),
		(16#F4#,10),
		(16#44#,1),
		(16#0#,7),
		(16#AC#,1),
		(16#F4#,4),
		(16#AC#,1),
		(16#0#,10),
		(16#24#,1),
		(16#44#,4),
		(16#24#,1),
		(16#0#,5)
	);

	Orange_Data_Access : PACK_BITMAP_ACCESS := Orange_Data'Access;

	Orange : constant PACK_IMAGE :=
	(
		16, 16,
		Orange_Data_Access
	);

	Fraise_Data : aliased constant PACK_BITMAP :=
	(
		(16#0#,8),
		(16#49#,1),
		(16#0#,15),
		(16#DB#,1),
		(16#49#,1),
		(16#0#,10),
		(16#18#,4),
		(16#DB#,1),
		(16#59#,1),
		(16#18#,3),
		(16#8#,1),
		(16#0#,4),
		(16#20#,1),
		(16#80#,1),
		(16#88#,2),
		(16#6C#,1),
		(16#18#,1),
		(16#59#,1),
		(16#18#,1),
		(16#38#,1),
		(16#9A#,1),
		(16#88#,1),
		(16#20#,1),
		(16#0#,3),
		(16#20#,1),
		(16#60#,1),
		(16#C9#,1),
		(16#C0#,1),
		(16#C4#,1),
		(16#AC#,1),
		(16#50#,1),
		(16#18#,1),
		(16#34#,1),
		(16#70#,1),
		(16#D2#,1),
		(16#C0#,1),
		(16#60#,1),
		(16#20#,1),
		(16#0#,2),
		(16#80#,1),
		(16#C9#,1),
		(16#DB#,1),
		(16#C0#,1),
		(16#D2#,2),
		(16#C0#,1),
		(16#18#,1),
		(16#88#,1),
		(16#C0#,4),
		(16#80#,1),
		(16#0#,2),
		(16#80#,1),
		(16#C0#,7),
		(16#D2#,2),
		(16#C0#,1),
		(16#DB#,1),
		(16#C9#,1),
		(16#80#,1),
		(16#0#,2),
		(16#80#,1),
		(16#C0#,2),
		(16#D2#,1),
		(16#C4#,2),
		(16#D2#,1),
		(16#C0#,1),
		(16#C4#,2),
		(16#C0#,1),
		(16#C9#,1),
		(16#C0#,1),
		(16#80#,1),
		(16#0#,2),
		(16#60#,1),
		(16#A0#,1),
		(16#C0#,1),
		(16#D2#,1),
		(16#C4#,2),
		(16#D2#,1),
		(16#C0#,3),
		(16#C9#,1),
		(16#C0#,1),
		(16#A0#,1),
		(16#60#,1),
		(16#0#,3),
		(16#40#,1),
		(16#C0#,7),
		(16#C9#,1),
		(16#DB#,1),
		(16#C0#,1),
		(16#40#,1),
		(16#0#,4),
		(16#40#,1),
		(16#C0#,1),
		(16#DB#,1),
		(16#C9#,2),
		(16#DB#,1),
		(16#C0#,5),
		(16#40#,1),
		(16#0#,5),
		(16#40#,1),
		(16#C9#,1),
		(16#C0#,2),
		(16#C9#,1),
		(16#C0#,1),
		(16#CD#,2),
		(16#C0#,1),
		(16#40#,1),
		(16#0#,7),
		(16#80#,1),
		(16#C0#,2),
		(16#C9#,1),
		(16#C0#,1),
		(16#CD#,2),
		(16#80#,1),
		(16#0#,9),
		(16#80#,1),
		(16#C9#,1),
		(16#DB#,1),
		(16#C0#,2),
		(16#80#,1),
		(16#0#,11),
		(16#40#,1),
		(16#C0#,2),
		(16#40#,1),
		(16#0#,13),
		(16#40#,2),
		(16#0#,7)
	);

	Fraise_Data_Access : PACK_BITMAP_ACCESS := Fraise_Data'Access;

	Fraise : constant PACK_IMAGE :=
	(
		16, 16,
		Fraise_Data_Access
	);

	Pomme_Data : aliased constant PACK_BITMAP :=
	(
		(16#0#,3),
		(16#8#,3),
		(16#4#,1),
		(16#0#,1),
		(16#8#,1),
		(16#0#,9),
		(16#8#,1),
		(16#18#,3),
		(16#10#,1),
		(16#0#,1),
		(16#18#,1),
		(16#8#,1),
		(16#0#,10),
		(16#18#,5),
		(16#88#,1),
		(16#C0#,2),
		(16#0#,6),
		(16#20#,1),
		(16#80#,1),
		(16#88#,2),
		(16#6C#,1),
		(16#18#,1),
		(16#88#,1),
		(16#C0#,3),
		(16#80#,1),
		(16#20#,1),
		(16#0#,3),
		(16#20#,1),
		(16#60#,1),
		(16#C0#,1),
		(16#C9#,1),
		(16#C0#,1),
		(16#A4#,1),
		(16#50#,1),
		(16#C0#,5),
		(16#60#,1),
		(16#20#,1),
		(16#0#,2),
		(16#80#,1),
		(16#C0#,2),
		(16#DB#,1),
		(16#C9#,1),
		(16#C0#,8),
		(16#80#,1),
		(16#0#,2),
		(16#80#,1),
		(16#C9#,1),
		(16#DB#,1),
		(16#C0#,10),
		(16#80#,1),
		(16#0#,2),
		(16#80#,1),
		(16#C9#,1),
		(16#DB#,1),
		(16#C0#,10),
		(16#80#,1),
		(16#0#,2),
		(16#80#,1),
		(16#C4#,1),
		(16#D2#,1),
		(16#C0#,10),
		(16#80#,1),
		(16#0#,2),
		(16#80#,1),
		(16#C0#,12),
		(16#80#,1),
		(16#0#,2),
		(16#80#,1),
		(16#C0#,12),
		(16#80#,1),
		(16#0#,2),
		(16#20#,1),
		(16#60#,1),
		(16#C0#,10),
		(16#60#,1),
		(16#20#,1),
		(16#0#,3),
		(16#40#,1),
		(16#C0#,10),
		(16#40#,1),
		(16#0#,4),
		(16#40#,1),
		(16#C0#,10),
		(16#40#,1),
		(16#0#,6),
		(16#C0#,2),
		(16#80#,1),
		(16#0#,2),
		(16#80#,1),
		(16#C0#,2),
		(16#0#,8),
		(16#40#,2),
		(16#20#,1),
		(16#0#,2),
		(16#20#,1),
		(16#40#,2),
		(16#0#,4)
	);

	Pomme_Data_Access : PACK_BITMAP_ACCESS := Pomme_Data'Access;

	Pomme : constant PACK_IMAGE :=
	(
		16, 16,
		Pomme_Data_Access
	);

	Truc_Data : aliased constant PACK_BITMAP :=
	(
		(16#0#,7),
		(16#48#,2),
		(16#0#,13),
		(16#48#,1),
		(16#FC#,2),
		(16#48#,1),
		(16#0#,10),
		(16#90#,1),
		(16#D8#,1),
		(16#FC#,4),
		(16#D8#,1),
		(16#90#,1),
		(16#0#,8),
		(16#D8#,1),
		(16#FC#,1),
		(16#FD#,1),
		(16#FE#,1),
		(16#FC#,3),
		(16#D8#,1),
		(16#0#,7),
		(16#48#,1),
		(16#FC#,1),
		(16#FD#,2),
		(16#FE#,1),
		(16#FC#,4),
		(16#48#,1),
		(16#0#,5),
		(16#48#,1),
		(16#FC#,2),
		(16#FE#,2),
		(16#FC#,6),
		(16#48#,1),
		(16#0#,4),
		(16#48#,1),
		(16#FC#,2),
		(16#FE#,2),
		(16#FC#,6),
		(16#48#,1),
		(16#0#,4),
		(16#48#,1),
		(16#FC#,2),
		(16#FE#,2),
		(16#FC#,6),
		(16#48#,1),
		(16#0#,3),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,1),
		(16#FD#,1),
		(16#FE#,1),
		(16#FD#,1),
		(16#FC#,6),
		(16#90#,1),
		(16#24#,1),
		(16#0#,2),
		(16#B4#,1),
		(16#FC#,2),
		(16#DB#,1),
		(16#FD#,1),
		(16#FC#,8),
		(16#B4#,1),
		(16#0#,2),
		(16#B4#,1),
		(16#FC#,2),
		(16#DB#,1),
		(16#FD#,1),
		(16#FC#,8),
		(16#B4#,1),
		(16#0#,2),
		(16#B4#,1),
		(16#FC#,2),
		(16#FD#,1),
		(16#FC#,9),
		(16#B4#,1),
		(16#0#,2),
		(16#B4#,1),
		(16#FC#,1),
		(16#BD#,5),
		(16#FD#,2),
		(16#DD#,1),
		(16#BD#,2),
		(16#FC#,1),
		(16#B4#,1),
		(16#0#,2),
		(16#B4#,1),
		(16#BD#,1),
		(16#1B#,5),
		(16#DB#,2),
		(16#9B#,1),
		(16#1B#,2),
		(16#BD#,1),
		(16#B4#,1),
		(16#0#,3),
		(16#9#,1),
		(16#1B#,5),
		(16#DB#,2),
		(16#9B#,1),
		(16#1B#,2),
		(16#9#,1),
		(16#0#,5),
		(16#9#,5),
		(16#49#,2),
		(16#29#,1),
		(16#9#,2),
		(16#0#,3)
	);

	Truc_Data_Access : PACK_BITMAP_ACCESS := Truc_Data'Access;

	Truc : constant PACK_IMAGE :=
	(
		16, 16,
		Truc_Data_Access
	);

	Pac_Gum_Data : aliased constant PACK_BITMAP :=
	(
		(16#0#,86),
		(16#24#,1),
		(16#AD#,2),
		(16#24#,1),
		(16#0#,11),
		(16#24#,1),
		(16#8D#,1),
		(16#F6#,2),
		(16#8D#,1),
		(16#24#,1),
		(16#0#,10),
		(16#AD#,1),
		(16#F6#,4),
		(16#AD#,1),
		(16#0#,10),
		(16#AD#,1),
		(16#F6#,4),
		(16#AD#,1),
		(16#0#,10),
		(16#24#,1),
		(16#8D#,1),
		(16#F6#,2),
		(16#8D#,1),
		(16#24#,1),
		(16#0#,11),
		(16#24#,1),
		(16#AD#,2),
		(16#24#,1),
		(16#0#,86)
	);

	Pac_Gum_Data_Access : PACK_BITMAP_ACCESS := Pac_Gum_Data'Access;

	Pac_Gum : constant PACK_IMAGE :=
	(
		16, 16,
		Pac_Gum_Data_Access
	);

	Pacman_Gauche_Data : aliased constant PACK_BITMAP :=
	(
		(16#0#,5),
		(16#24#,1),
		(16#48#,4),
		(16#24#,1),
		(16#0#,9),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,4),
		(16#90#,1),
		(16#24#,1),
		(16#0#,7),
		(16#B4#,1),
		(16#FC#,8),
		(16#B4#,1),
		(16#0#,6),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,8),
		(16#B4#,1),
		(16#0#,6),
		(16#24#,1),
		(16#B4#,1),
		(16#FC#,8),
		(16#24#,1),
		(16#0#,7),
		(16#FC#,8),
		(16#90#,1),
		(16#24#,1),
		(16#0#,7),
		(16#B4#,1),
		(16#FC#,7),
		(16#48#,1),
		(16#0#,7),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,6),
		(16#48#,1),
		(16#0#,7),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,6),
		(16#48#,1),
		(16#0#,7),
		(16#B4#,1),
		(16#FC#,7),
		(16#48#,1),
		(16#0#,6),
		(16#FC#,8),
		(16#90#,1),
		(16#24#,1),
		(16#0#,4),
		(16#24#,1),
		(16#B4#,1),
		(16#FC#,8),
		(16#24#,1),
		(16#0#,4),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,8),
		(16#B4#,1),
		(16#0#,5),
		(16#B4#,1),
		(16#FC#,8),
		(16#B4#,1),
		(16#0#,7),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,4),
		(16#90#,1),
		(16#24#,1),
		(16#0#,9),
		(16#24#,1),
		(16#48#,4),
		(16#24#,1),
		(16#0#,5)
	);

	Pacman_Gauche_Data_Access : PACK_BITMAP_ACCESS := Pacman_Gauche_Data'Access;

	Pacman_Gauche : constant PACK_IMAGE :=
	(
		16, 16,
		Pacman_Gauche_Data_Access
	);

	Pacman_Gauche_2_Data : aliased constant PACK_BITMAP :=
	(
		(16#0#,5),
		(16#24#,1),
		(16#48#,4),
		(16#24#,1),
		(16#0#,9),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,4),
		(16#90#,1),
		(16#24#,1),
		(16#0#,7),
		(16#B4#,1),
		(16#FC#,8),
		(16#B4#,1),
		(16#0#,5),
		(16#B4#,1),
		(16#FC#,10),
		(16#B4#,1),
		(16#0#,3),
		(16#24#,1),
		(16#FC#,12),
		(16#24#,1),
		(16#0#,1),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,12),
		(16#90#,1),
		(16#24#,1),
		(16#0#,4),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,9),
		(16#48#,1),
		(16#0#,5),
		(16#24#,1),
		(16#48#,2),
		(16#90#,1),
		(16#FC#,6),
		(16#48#,1),
		(16#0#,5),
		(16#24#,1),
		(16#48#,2),
		(16#90#,1),
		(16#FC#,6),
		(16#48#,1),
		(16#0#,4),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,9),
		(16#48#,1),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,12),
		(16#90#,1),
		(16#24#,1),
		(16#0#,1),
		(16#24#,1),
		(16#FC#,12),
		(16#24#,1),
		(16#0#,3),
		(16#B4#,1),
		(16#FC#,10),
		(16#B4#,1),
		(16#0#,5),
		(16#B4#,1),
		(16#FC#,8),
		(16#B4#,1),
		(16#0#,7),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,4),
		(16#90#,1),
		(16#24#,1),
		(16#0#,9),
		(16#24#,1),
		(16#48#,4),
		(16#24#,1),
		(16#0#,5)
	);

	Pacman_Gauche_2_Data_Access : PACK_BITMAP_ACCESS := Pacman_Gauche_2_Data'Access;

	Pacman_Gauche_2 : constant PACK_IMAGE :=
	(
		16, 16,
		Pacman_Gauche_2_Data_Access
	);

	Pacman_Droit_Data : aliased constant PACK_BITMAP :=
	(
		(16#0#,5),
		(16#24#,1),
		(16#48#,4),
		(16#24#,1),
		(16#0#,9),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,4),
		(16#90#,1),
		(16#24#,1),
		(16#0#,7),
		(16#B4#,1),
		(16#FC#,8),
		(16#B4#,1),
		(16#0#,5),
		(16#B4#,1),
		(16#FC#,8),
		(16#90#,1),
		(16#24#,1),
		(16#0#,4),
		(16#24#,1),
		(16#FC#,8),
		(16#B4#,1),
		(16#24#,1),
		(16#0#,4),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,8),
		(16#0#,6),
		(16#48#,1),
		(16#FC#,7),
		(16#B4#,1),
		(16#0#,7),
		(16#48#,1),
		(16#FC#,6),
		(16#90#,1),
		(16#24#,1),
		(16#0#,7),
		(16#48#,1),
		(16#FC#,6),
		(16#90#,1),
		(16#24#,1),
		(16#0#,7),
		(16#48#,1),
		(16#FC#,7),
		(16#B4#,1),
		(16#0#,7),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,8),
		(16#0#,7),
		(16#24#,1),
		(16#FC#,8),
		(16#B4#,1),
		(16#24#,1),
		(16#0#,6),
		(16#B4#,1),
		(16#FC#,8),
		(16#90#,1),
		(16#24#,1),
		(16#0#,6),
		(16#B4#,1),
		(16#FC#,8),
		(16#B4#,1),
		(16#0#,7),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,4),
		(16#90#,1),
		(16#24#,1),
		(16#0#,9),
		(16#24#,1),
		(16#48#,4),
		(16#24#,1),
		(16#0#,5)
	);

	Pacman_Droit_Data_Access : PACK_BITMAP_ACCESS := Pacman_Droit_Data'Access;

	Pacman_Droit : constant PACK_IMAGE :=
	(
		16, 16,
		Pacman_Droit_Data_Access
	);

	Pacman_Droit_2_Data : aliased constant PACK_BITMAP :=
	(
		(16#0#,5),
		(16#24#,1),
		(16#48#,4),
		(16#24#,1),
		(16#0#,9),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,4),
		(16#90#,1),
		(16#24#,1),
		(16#0#,7),
		(16#B4#,1),
		(16#FC#,8),
		(16#B4#,1),
		(16#0#,5),
		(16#B4#,1),
		(16#FC#,10),
		(16#B4#,1),
		(16#0#,3),
		(16#24#,1),
		(16#FC#,12),
		(16#24#,1),
		(16#0#,1),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,12),
		(16#90#,1),
		(16#24#,1),
		(16#48#,1),
		(16#FC#,9),
		(16#90#,1),
		(16#24#,1),
		(16#0#,4),
		(16#48#,1),
		(16#FC#,6),
		(16#90#,1),
		(16#48#,2),
		(16#24#,1),
		(16#0#,5),
		(16#48#,1),
		(16#FC#,6),
		(16#90#,1),
		(16#48#,2),
		(16#24#,1),
		(16#0#,5),
		(16#48#,1),
		(16#FC#,9),
		(16#90#,1),
		(16#24#,1),
		(16#0#,4),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,12),
		(16#90#,1),
		(16#24#,1),
		(16#0#,1),
		(16#24#,1),
		(16#FC#,12),
		(16#24#,1),
		(16#0#,3),
		(16#B4#,1),
		(16#FC#,10),
		(16#B4#,1),
		(16#0#,5),
		(16#B4#,1),
		(16#FC#,8),
		(16#B4#,1),
		(16#0#,7),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,4),
		(16#90#,1),
		(16#24#,1),
		(16#0#,9),
		(16#24#,1),
		(16#48#,4),
		(16#24#,1),
		(16#0#,5)
	);

	Pacman_Droit_2_Data_Access : PACK_BITMAP_ACCESS := Pacman_Droit_2_Data'Access;

	Pacman_Droit_2 : constant PACK_IMAGE :=
	(
		16, 16,
		Pacman_Droit_2_Data_Access
	);

	Pacman_Haut_Data : aliased constant PACK_BITMAP :=
	(
		(16#0#,50),
		(16#B4#,1),
		(16#24#,1),
		(16#0#,8),
		(16#24#,1),
		(16#B4#,1),
		(16#0#,3),
		(16#24#,1),
		(16#FC#,1),
		(16#90#,1),
		(16#24#,1),
		(16#0#,6),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,1),
		(16#24#,1),
		(16#0#,1),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,2),
		(16#B4#,1),
		(16#0#,6),
		(16#B4#,1),
		(16#FC#,2),
		(16#90#,1),
		(16#24#,1),
		(16#48#,1),
		(16#FC#,5),
		(16#0#,4),
		(16#FC#,5),
		(16#48#,2),
		(16#FC#,5),
		(16#B4#,1),
		(16#24#,2),
		(16#B4#,1),
		(16#FC#,5),
		(16#48#,2),
		(16#FC#,6),
		(16#90#,2),
		(16#FC#,6),
		(16#48#,2),
		(16#FC#,14),
		(16#48#,1),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,12),
		(16#90#,1),
		(16#24#,1),
		(16#0#,1),
		(16#24#,1),
		(16#FC#,12),
		(16#24#,1),
		(16#0#,3),
		(16#B4#,1),
		(16#FC#,10),
		(16#B4#,1),
		(16#0#,5),
		(16#B4#,1),
		(16#FC#,8),
		(16#B4#,1),
		(16#0#,7),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,4),
		(16#90#,1),
		(16#24#,1),
		(16#0#,9),
		(16#24#,1),
		(16#48#,4),
		(16#24#,1),
		(16#0#,5)
	);

	Pacman_Haut_Data_Access : PACK_BITMAP_ACCESS := Pacman_Haut_Data'Access;

	Pacman_Haut : constant PACK_IMAGE :=
	(
		16, 16,
		Pacman_Haut_Data_Access
	);

	Pacman_Haut_2_Data : aliased constant PACK_BITMAP :=
	(
		(16#0#,5),
		(16#24#,1),
		(16#0#,4),
		(16#24#,1),
		(16#0#,9),
		(16#24#,1),
		(16#90#,1),
		(16#0#,4),
		(16#90#,1),
		(16#24#,1),
		(16#0#,7),
		(16#B4#,1),
		(16#FC#,2),
		(16#0#,4),
		(16#FC#,2),
		(16#B4#,1),
		(16#0#,5),
		(16#B4#,1),
		(16#FC#,3),
		(16#0#,4),
		(16#FC#,3),
		(16#B4#,1),
		(16#0#,3),
		(16#24#,1),
		(16#FC#,4),
		(16#24#,1),
		(16#0#,2),
		(16#24#,1),
		(16#FC#,4),
		(16#24#,1),
		(16#0#,1),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,4),
		(16#90#,1),
		(16#24#,2),
		(16#90#,1),
		(16#FC#,4),
		(16#90#,1),
		(16#24#,1),
		(16#48#,1),
		(16#FC#,6),
		(16#48#,2),
		(16#FC#,6),
		(16#48#,2),
		(16#FC#,6),
		(16#48#,2),
		(16#FC#,6),
		(16#48#,2),
		(16#FC#,6),
		(16#90#,2),
		(16#FC#,6),
		(16#48#,2),
		(16#FC#,14),
		(16#48#,1),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,12),
		(16#90#,1),
		(16#24#,1),
		(16#0#,1),
		(16#24#,1),
		(16#FC#,12),
		(16#24#,1),
		(16#0#,3),
		(16#B4#,1),
		(16#FC#,10),
		(16#B4#,1),
		(16#0#,5),
		(16#B4#,1),
		(16#FC#,8),
		(16#B4#,1),
		(16#0#,7),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,4),
		(16#90#,1),
		(16#24#,1),
		(16#0#,9),
		(16#24#,1),
		(16#48#,4),
		(16#24#,1),
		(16#0#,5)
	);

	Pacman_Haut_2_Data_Access : PACK_BITMAP_ACCESS := Pacman_Haut_2_Data'Access;

	Pacman_Haut_2 : constant PACK_IMAGE :=
	(
		16, 16,
		Pacman_Haut_2_Data_Access
	);

	Pacman_Bas_Data : aliased constant PACK_BITMAP :=
	(
		(16#0#,5),
		(16#24#,1),
		(16#48#,4),
		(16#24#,1),
		(16#0#,9),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,4),
		(16#90#,1),
		(16#24#,1),
		(16#0#,7),
		(16#B4#,1),
		(16#FC#,8),
		(16#B4#,1),
		(16#0#,5),
		(16#B4#,1),
		(16#FC#,10),
		(16#B4#,1),
		(16#0#,3),
		(16#24#,1),
		(16#FC#,12),
		(16#24#,1),
		(16#0#,1),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,12),
		(16#90#,1),
		(16#24#,1),
		(16#48#,1),
		(16#FC#,14),
		(16#48#,2),
		(16#FC#,6),
		(16#90#,2),
		(16#FC#,6),
		(16#48#,2),
		(16#FC#,5),
		(16#B4#,1),
		(16#24#,2),
		(16#B4#,1),
		(16#FC#,5),
		(16#48#,2),
		(16#FC#,5),
		(16#0#,4),
		(16#FC#,5),
		(16#48#,1),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,2),
		(16#B4#,1),
		(16#0#,6),
		(16#B4#,1),
		(16#FC#,2),
		(16#90#,1),
		(16#24#,1),
		(16#0#,1),
		(16#24#,1),
		(16#FC#,1),
		(16#90#,1),
		(16#24#,1),
		(16#0#,6),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,1),
		(16#24#,1),
		(16#0#,3),
		(16#B4#,1),
		(16#24#,1),
		(16#0#,8),
		(16#24#,1),
		(16#B4#,1),
		(16#0#,50)
	);

	Pacman_Bas_Data_Access : PACK_BITMAP_ACCESS := Pacman_Bas_Data'Access;

	Pacman_Bas : constant PACK_IMAGE :=
	(
		16, 16,
		Pacman_Bas_Data_Access
	);

	Pacman_Bas_2_Data : aliased constant PACK_BITMAP :=
	(
		(16#0#,5),
		(16#24#,1),
		(16#48#,4),
		(16#24#,1),
		(16#0#,9),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,4),
		(16#90#,1),
		(16#24#,1),
		(16#0#,7),
		(16#B4#,1),
		(16#FC#,8),
		(16#B4#,1),
		(16#0#,5),
		(16#B4#,1),
		(16#FC#,10),
		(16#B4#,1),
		(16#0#,3),
		(16#24#,1),
		(16#FC#,12),
		(16#24#,1),
		(16#0#,1),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,12),
		(16#90#,1),
		(16#24#,1),
		(16#48#,1),
		(16#FC#,14),
		(16#48#,2),
		(16#FC#,6),
		(16#90#,2),
		(16#FC#,6),
		(16#48#,2),
		(16#FC#,6),
		(16#48#,2),
		(16#FC#,6),
		(16#48#,2),
		(16#FC#,6),
		(16#48#,2),
		(16#FC#,6),
		(16#48#,1),
		(16#24#,1),
		(16#90#,1),
		(16#FC#,4),
		(16#90#,1),
		(16#24#,2),
		(16#90#,1),
		(16#FC#,4),
		(16#90#,1),
		(16#24#,1),
		(16#0#,1),
		(16#24#,1),
		(16#FC#,4),
		(16#24#,1),
		(16#0#,2),
		(16#24#,1),
		(16#FC#,4),
		(16#24#,1),
		(16#0#,3),
		(16#B4#,1),
		(16#FC#,3),
		(16#0#,4),
		(16#FC#,3),
		(16#B4#,1),
		(16#0#,5),
		(16#B4#,1),
		(16#FC#,2),
		(16#0#,4),
		(16#FC#,2),
		(16#B4#,1),
		(16#0#,7),
		(16#24#,1),
		(16#90#,1),
		(16#0#,4),
		(16#90#,1),
		(16#24#,1),
		(16#0#,9),
		(16#24#,1),
		(16#0#,4),
		(16#24#,1),
		(16#0#,5)
	);

	Pacman_Bas_2_Data_Access : PACK_BITMAP_ACCESS := Pacman_Bas_2_Data'Access;

	Pacman_Bas_2 : constant PACK_IMAGE :=
	(
		16, 16,
		Pacman_Bas_2_Data_Access
	);

	Fantome_Jaune_Data : aliased constant PACK_BITMAP :=
	(
		(16#0#,6),
		(16#44#,4),
		(16#0#,12),
		(16#F4#,4),
		(16#0#,9),
		(16#AC#,1),
		(16#F4#,8),
		(16#AC#,1),
		(16#0#,5),
		(16#AC#,1),
		(16#F4#,10),
		(16#AC#,1),
		(16#0#,4),
		(16#F4#,3),
		(16#F9#,3),
		(16#F5#,1),
		(16#F4#,1),
		(16#F9#,4),
		(16#0#,4),
		(16#F4#,2),
		(16#F9#,1),
		(16#DB#,3),
		(16#FA#,1),
		(16#F4#,1),
		(16#DB#,4),
		(16#0#,2),
		(16#44#,1),
		(16#F4#,3),
		(16#F9#,1),
		(16#DB#,2),
		(16#6F#,1),
		(16#6A#,1),
		(16#F4#,1),
		(16#DB#,2),
		(16#93#,1),
		(16#27#,1),
		(16#F4#,1),
		(16#44#,2),
		(16#F4#,3),
		(16#F9#,1),
		(16#DB#,2),
		(16#B7#,1),
		(16#B6#,1),
		(16#F4#,1),
		(16#DB#,3),
		(16#93#,1),
		(16#F4#,1),
		(16#44#,2),
		(16#F4#,3),
		(16#F5#,1),
		(16#FA#,3),
		(16#F9#,1),
		(16#F4#,1),
		(16#FA#,4),
		(16#F4#,1),
		(16#44#,2),
		(16#F4#,14),
		(16#44#,2),
		(16#F4#,14),
		(16#44#,2),
		(16#F4#,14),
		(16#44#,2),
		(16#F4#,14),
		(16#44#,2),
		(16#F4#,14),
		(16#44#,2),
		(16#F4#,1),
		(16#0#,2),
		(16#44#,1),
		(16#F4#,2),
		(16#44#,2),
		(16#F4#,2),
		(16#44#,1),
		(16#0#,2),
		(16#F4#,1),
		(16#44#,1),
		(16#0#,1),
		(16#44#,1),
		(16#0#,3),
		(16#44#,2),
		(16#0#,2),
		(16#44#,2),
		(16#0#,3),
		(16#44#,1),
		(16#0#,1)
	);

	Fantome_Jaune_Data_Access : PACK_BITMAP_ACCESS := Fantome_Jaune_Data'Access;

	Fantome_Jaune : constant PACK_IMAGE :=
	(
		16, 16,
		Fantome_Jaune_Data_Access
	);

	Fantome_Rose_Data : aliased constant PACK_BITMAP :=
	(
		(16#0#,6),
		(16#45#,4),
		(16#0#,12),
		(16#F7#,4),
		(16#0#,9),
		(16#AE#,1),
		(16#F7#,8),
		(16#AE#,1),
		(16#0#,5),
		(16#AE#,1),
		(16#F7#,10),
		(16#AE#,1),
		(16#0#,4),
		(16#F7#,3),
		(16#FB#,3),
		(16#F7#,2),
		(16#FB#,4),
		(16#0#,4),
		(16#F7#,2),
		(16#FB#,1),
		(16#DB#,3),
		(16#FB#,1),
		(16#F7#,1),
		(16#DB#,4),
		(16#0#,2),
		(16#45#,1),
		(16#F7#,3),
		(16#FB#,1),
		(16#DB#,2),
		(16#6F#,1),
		(16#6B#,1),
		(16#F7#,1),
		(16#DB#,2),
		(16#93#,1),
		(16#27#,1),
		(16#F7#,1),
		(16#45#,2),
		(16#F7#,3),
		(16#FB#,1),
		(16#DB#,2),
		(16#B7#,2),
		(16#F7#,1),
		(16#DB#,3),
		(16#93#,1),
		(16#F7#,1),
		(16#45#,2),
		(16#F7#,4),
		(16#FB#,4),
		(16#F7#,1),
		(16#FB#,4),
		(16#F7#,1),
		(16#45#,2),
		(16#F7#,14),
		(16#45#,2),
		(16#F7#,14),
		(16#45#,2),
		(16#F7#,14),
		(16#45#,2),
		(16#F7#,14),
		(16#45#,2),
		(16#F7#,14),
		(16#45#,2),
		(16#F7#,1),
		(16#0#,2),
		(16#45#,1),
		(16#F7#,2),
		(16#45#,2),
		(16#F7#,2),
		(16#45#,1),
		(16#0#,2),
		(16#F7#,1),
		(16#45#,1),
		(16#0#,1),
		(16#45#,1),
		(16#0#,3),
		(16#45#,2),
		(16#0#,2),
		(16#45#,2),
		(16#0#,3),
		(16#45#,1),
		(16#0#,1)
	);

	Fantome_Rose_Data_Access : PACK_BITMAP_ACCESS := Fantome_Rose_Data'Access;

	Fantome_Rose : constant PACK_IMAGE :=
	(
		16, 16,
		Fantome_Rose_Data_Access
	);

	Fantome_Bleu_Data : aliased constant PACK_BITMAP :=
	(
		(16#0#,6),
		(16#9#,4),
		(16#0#,12),
		(16#1B#,4),
		(16#0#,9),
		(16#12#,1),
		(16#1B#,8),
		(16#12#,1),
		(16#0#,5),
		(16#12#,1),
		(16#1B#,10),
		(16#12#,1),
		(16#0#,4),
		(16#1B#,3),
		(16#5B#,3),
		(16#3B#,1),
		(16#1B#,1),
		(16#5B#,4),
		(16#0#,4),
		(16#1B#,2),
		(16#5B#,1),
		(16#DB#,3),
		(16#9B#,1),
		(16#1B#,1),
		(16#DB#,4),
		(16#0#,2),
		(16#9#,1),
		(16#1B#,3),
		(16#5B#,1),
		(16#DB#,2),
		(16#6F#,1),
		(16#B#,1),
		(16#1B#,1),
		(16#DB#,2),
		(16#93#,1),
		(16#27#,1),
		(16#1B#,1),
		(16#9#,2),
		(16#1B#,3),
		(16#5B#,1),
		(16#DB#,2),
		(16#B7#,1),
		(16#77#,1),
		(16#1B#,1),
		(16#DB#,3),
		(16#93#,1),
		(16#1B#,1),
		(16#9#,2),
		(16#1B#,3),
		(16#3B#,1),
		(16#9B#,3),
		(16#7B#,1),
		(16#1B#,1),
		(16#9B#,4),
		(16#1B#,1),
		(16#9#,2),
		(16#1B#,14),
		(16#9#,2),
		(16#1B#,14),
		(16#9#,2),
		(16#1B#,14),
		(16#9#,2),
		(16#1B#,14),
		(16#9#,2),
		(16#1B#,14),
		(16#9#,2),
		(16#1B#,1),
		(16#0#,2),
		(16#9#,1),
		(16#1B#,2),
		(16#9#,2),
		(16#1B#,2),
		(16#9#,1),
		(16#0#,2),
		(16#1B#,1),
		(16#9#,1),
		(16#0#,1),
		(16#9#,1),
		(16#0#,3),
		(16#9#,2),
		(16#0#,2),
		(16#9#,2),
		(16#0#,3),
		(16#9#,1),
		(16#0#,1)
	);

	Fantome_Bleu_Data_Access : PACK_BITMAP_ACCESS := Fantome_Bleu_Data'Access;

	Fantome_Bleu : constant PACK_IMAGE :=
	(
		16, 16,
		Fantome_Bleu_Data_Access
	);

	Fantome_Rouge_Data : aliased constant PACK_BITMAP :=
	(
		(16#0#,6),
		(16#40#,4),
		(16#0#,12),
		(16#C0#,4),
		(16#0#,9),
		(16#80#,1),
		(16#C0#,8),
		(16#80#,1),
		(16#0#,5),
		(16#80#,1),
		(16#C0#,10),
		(16#80#,1),
		(16#0#,4),
		(16#C0#,3),
		(16#C9#,3),
		(16#C4#,1),
		(16#C0#,1),
		(16#C9#,4),
		(16#0#,4),
		(16#C0#,2),
		(16#C9#,1),
		(16#DB#,3),
		(16#D2#,1),
		(16#C0#,1),
		(16#DB#,4),
		(16#0#,2),
		(16#40#,1),
		(16#C0#,3),
		(16#C9#,1),
		(16#DB#,2),
		(16#6F#,1),
		(16#42#,1),
		(16#C0#,1),
		(16#DB#,2),
		(16#93#,1),
		(16#27#,1),
		(16#C0#,1),
		(16#40#,2),
		(16#C0#,3),
		(16#C9#,1),
		(16#DB#,2),
		(16#B7#,1),
		(16#AE#,1),
		(16#C0#,1),
		(16#DB#,3),
		(16#93#,1),
		(16#C0#,1),
		(16#40#,2),
		(16#C0#,3),
		(16#C4#,1),
		(16#D2#,3),
		(16#CD#,1),
		(16#C0#,1),
		(16#D2#,4),
		(16#C0#,1),
		(16#40#,2),
		(16#C0#,14),
		(16#40#,2),
		(16#C0#,14),
		(16#40#,2),
		(16#C0#,14),
		(16#40#,2),
		(16#C0#,14),
		(16#40#,2),
		(16#C0#,14),
		(16#40#,2),
		(16#C0#,1),
		(16#0#,2),
		(16#40#,1),
		(16#C0#,2),
		(16#40#,2),
		(16#C0#,2),
		(16#40#,1),
		(16#0#,2),
		(16#C0#,1),
		(16#40#,1),
		(16#0#,1),
		(16#40#,1),
		(16#0#,3),
		(16#40#,2),
		(16#0#,2),
		(16#40#,2),
		(16#0#,3),
		(16#40#,1),
		(16#0#,1)
	);

	Fantome_Rouge_Data_Access : PACK_BITMAP_ACCESS := Fantome_Rouge_Data'Access;

	Fantome_Rouge : constant PACK_IMAGE :=
	(
		16, 16,
		Fantome_Rouge_Data_Access
	);

	Fantome_Vuln_Data : aliased constant PACK_BITMAP :=
	(
		(16#0#,6),
		(16#1#,4),
		(16#0#,12),
		(16#27#,4),
		(16#0#,9),
		(16#2#,1),
		(16#27#,8),
		(16#2#,1),
		(16#0#,5),
		(16#2#,1),
		(16#3#,1),
		(16#27#,8),
		(16#3#,1),
		(16#2#,1),
		(16#0#,4),
		(16#27#,3),
		(16#6B#,2),
		(16#27#,2),
		(16#6B#,2),
		(16#27#,3),
		(16#0#,4),
		(16#27#,2),
		(16#6B#,1),
		(16#F7#,2),
		(16#6B#,2),
		(16#F7#,2),
		(16#6B#,1),
		(16#27#,2),
		(16#0#,2),
		(16#1#,1),
		(16#27#,3),
		(16#6B#,1),
		(16#F7#,2),
		(16#6B#,2),
		(16#F7#,2),
		(16#6B#,1),
		(16#27#,3),
		(16#1#,2),
		(16#27#,4),
		(16#6B#,2),
		(16#27#,2),
		(16#6B#,2),
		(16#27#,4),
		(16#1#,2),
		(16#27#,14),
		(16#1#,2),
		(16#27#,14),
		(16#1#,2),
		(16#27#,3),
		(16#6B#,1),
		(16#F7#,1),
		(16#27#,1),
		(16#B3#,2),
		(16#27#,1),
		(16#F7#,1),
		(16#6B#,1),
		(16#27#,3),
		(16#1#,2),
		(16#27#,2),
		(16#8F#,2),
		(16#6B#,1),
		(16#B3#,1),
		(16#8F#,2),
		(16#B3#,1),
		(16#6B#,1),
		(16#8F#,2),
		(16#27#,2),
		(16#1#,2),
		(16#27#,2),
		(16#8F#,2),
		(16#27#,1),
		(16#B3#,1),
		(16#4B#,2),
		(16#B3#,1),
		(16#27#,1),
		(16#8F#,2),
		(16#27#,2),
		(16#1#,2),
		(16#27#,14),
		(16#1#,2),
		(16#27#,1),
		(16#0#,2),
		(16#1#,1),
		(16#27#,2),
		(16#1#,2),
		(16#27#,2),
		(16#1#,1),
		(16#0#,2),
		(16#27#,1),
		(16#1#,1),
		(16#0#,1),
		(16#1#,1),
		(16#0#,3),
		(16#1#,2),
		(16#0#,2),
		(16#1#,2),
		(16#0#,3),
		(16#1#,1),
		(16#0#,1)
	);

	Fantome_Vuln_Data_Access : PACK_BITMAP_ACCESS := Fantome_Vuln_Data'Access;

	Fantome_Vuln : constant PACK_IMAGE :=
	(
		16, 16,
		Fantome_Vuln_Data_Access
	);

end ressources;

