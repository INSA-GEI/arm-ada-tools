-- 
-- Generated by rca 14/12/2017 17:07:22
--

pragma Ada_95;

with Insa;
with Insa.Graphics;
with Insa.Graphics.Images;

use Insa.Graphics.Images;

package ressource is

    pragma Warnings (Off);

	truc1_Data : aliased constant PACK_BITMAP :=
	(
		(16#0#,31),
		(16#D1#,10),
		(16#0#,14),
		(16#D1#,10),
		(16#0#,20),
		(16#D1#,2),
		(16#0#,22),
		(16#D1#,2),
		(16#0#,16),
		(16#18#,2),
		(16#48#,10),
		(16#0#,12),
		(16#18#,2),
		(16#48#,10),
		(16#0#,10),
		(16#18#,2),
		(16#48#,2),
		(16#18#,4),
		(16#48#,2),
		(16#18#,4),
		(16#48#,2),
		(16#0#,8),
		(16#18#,2),
		(16#48#,2),
		(16#18#,4),
		(16#48#,2),
		(16#18#,4),
		(16#48#,2),
		(16#0#,6),
		(16#48#,6),
		(16#18#,4),
		(16#48#,2),
		(16#18#,4),
		(16#48#,2),
		(16#0#,6),
		(16#48#,6),
		(16#18#,4),
		(16#48#,2),
		(16#18#,4),
		(16#48#,2),
		(16#0#,6),
		(16#48#,2),
		(16#18#,4),
		(16#48#,12),
		(16#0#,6),
		(16#48#,2),
		(16#18#,4),
		(16#48#,12),
		(16#0#,6),
		(16#48#,2),
		(16#18#,4),
		(16#48#,2),
		(16#18#,4),
		(16#48#,2),
		(16#18#,4),
		(16#0#,6),
		(16#48#,2),
		(16#18#,4),
		(16#48#,2),
		(16#18#,4),
		(16#48#,2),
		(16#18#,4),
		(16#0#,6),
		(16#48#,2),
		(16#18#,2),
		(16#48#,4),
		(16#18#,4),
		(16#48#,2),
		(16#18#,4),
		(16#0#,6),
		(16#48#,2),
		(16#18#,2),
		(16#48#,4),
		(16#18#,4),
		(16#48#,2),
		(16#18#,4),
		(16#0#,8),
		(16#48#,2),
		(16#18#,4),
		(16#48#,6),
		(16#18#,2),
		(16#48#,2),
		(16#0#,8),
		(16#48#,2),
		(16#18#,4),
		(16#48#,6),
		(16#18#,2),
		(16#48#,2),
		(16#0#,8),
		(16#48#,2),
		(16#18#,4),
		(16#48#,2),
		(16#18#,4),
		(16#48#,2),
		(16#0#,10),
		(16#48#,2),
		(16#18#,4),
		(16#48#,2),
		(16#18#,4),
		(16#48#,2),
		(16#0#,12),
		(16#48#,6),
		(16#18#,4),
		(16#0#,14),
		(16#48#,6),
		(16#18#,4),
		(16#0#,31)
	);

	truc1_Data_Access : PACK_BITMAP_ACCESS := truc1_Data'Access;

	truc1 : constant PACK_IMAGE :=
	(
		24, 24,
		truc1_Data_Access
	);

	truc2_Data : aliased constant PACK_BITMAP :=
	(
		(16#0#,33),
		(16#F4#,6),
		(16#0#,18),
		(16#F4#,6),
		(16#0#,14),
		(16#F4#,14),
		(16#0#,10),
		(16#F4#,14),
		(16#0#,8),
		(16#F4#,18),
		(16#0#,6),
		(16#F4#,18),
		(16#0#,6),
		(16#F4#,4),
		(16#DB#,6),
		(16#F4#,2),
		(16#DB#,6),
		(16#0#,6),
		(16#F4#,4),
		(16#DB#,6),
		(16#F4#,2),
		(16#DB#,6),
		(16#0#,4),
		(16#F4#,6),
		(16#DB#,4),
		(16#27#,2),
		(16#F4#,2),
		(16#DB#,4),
		(16#27#,2),
		(16#F4#,2),
		(16#0#,2),
		(16#F4#,6),
		(16#DB#,4),
		(16#27#,2),
		(16#F4#,2),
		(16#DB#,4),
		(16#27#,2),
		(16#F4#,2),
		(16#0#,2),
		(16#F4#,6),
		(16#DB#,6),
		(16#F4#,2),
		(16#DB#,6),
		(16#F4#,2),
		(16#0#,2),
		(16#F4#,6),
		(16#DB#,6),
		(16#F4#,2),
		(16#DB#,6),
		(16#F4#,2),
		(16#0#,2),
		(16#F4#,22),
		(16#0#,2),
		(16#F4#,22),
		(16#0#,2),
		(16#F4#,22),
		(16#0#,2),
		(16#F4#,22),
		(16#0#,2),
		(16#F4#,22),
		(16#0#,2),
		(16#F4#,22),
		(16#0#,2),
		(16#F4#,22),
		(16#0#,2),
		(16#F4#,22),
		(16#0#,2),
		(16#F4#,2),
		(16#0#,4),
		(16#F4#,4),
		(16#0#,2),
		(16#F4#,4),
		(16#0#,4),
		(16#F4#,2),
		(16#0#,2),
		(16#F4#,2),
		(16#0#,4),
		(16#F4#,4),
		(16#0#,2),
		(16#F4#,4),
		(16#0#,4),
		(16#F4#,2),
		(16#0#,25)
	);

	truc2_Data_Access : PACK_BITMAP_ACCESS := truc2_Data'Access;

	truc2 : constant PACK_IMAGE :=
	(
		24, 24,
		truc2_Data_Access
	);

	str1 : constant STRING := "Youhou";

	str2 : constant STRING := "Hello";

	SinWave : aliased constant SYNTH_WAVE :=
	(
		128,
		142,
		156,
		171,
		184,
		197,
		209,
		219,
		229,
		237,
		244,
		249,
		253,
		255,
		255,
		254,
		251,
		247,
		241,
		233,
		224,
		214,
		203,
		190,
		177,
		164,
		149,
		135,
		121,
		107,
		92,
		79,
		66,
		53,
		42,
		32,
		23,
		15,
		9,
		5,
		2,
		1,
		1,
		3,
		7,
		12,
		19,
		27,
		37,
		47,
		59,
		72,
		85,
		100,
		114
	);

	SinWave_Access : SYNTH_WAVE_ACCESS := SinWave'Access;

	NoiseWave : aliased constant SYNTH_WAVE :=
	(
		128,
		142,
		156,
		171,
		184,
		197,
		209,
		219,
		229,
		237,
		244,
		249,
		253,
		255,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		121,
		107,
		92,
		79,
		66,
		53,
		42,
		32,
		23,
		15,
		9,
		5,
		2,
		1,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0
	);

	NoiseWave_Access : SYNTH_WAVE_ACCESS := NoiseWave'Access;

	Guitar : aliased constant SYNTH_INSTRUMENT := (
		SYNTH_SquareWave'Access,
		TickAudio/0,01,
		TickAudio/0,005,
		0,5,
		TickAudio/0,1,
		0,
		NATURAL(0,08/TickAudio)
	);

	Guitar_Access : SYNTH_INSTRUMENT_ACCESS := Guitar'Access;

	zelda_Melody : aliased constant MELODY_NOTES (0..307) := (
		(46,0,0),
		(22,1,0),
		(29,1,2027),
		(41,0,2027),
		(29,1,2027),
		(22,1,2027),
		(29,1,2027),
		(46,0,1013),
		(46,0,1014),
		(48,0,1013),
		(50,0,1014),
		(29,1,0),
		(51,0,1013),
		(20,1,1014),
		(53,0,0),
		(27,1,2027),
		(58,2,0),
		(58,2,2027),
		(60,2,1013),
		(27,1,1014),
		(62,2,0),
		(63,2,1013),
		(65,2,1014),
		(20,1,0),
		(53,0,2027),
		(27,1,0),
		(53,0,2027),
		(54,0,2027),
		(27,1,0),
		(56,0,1013),
		(18,1,1014),
		(58,0,0),
		(25,1,2027),
		(61,2,2027),
		(66,2,1013),
		(25,1,1014),
		(68,2,0),
		(70,2,1013),
		(73,2,1014),
		(18,1,0),
		(58,0,2027),
		(25,1,0),
		(58,0,2027),
		(56,0,2027),
		(25,1,0),
		(54,0,1014),
		(25,1,1013),
		(56,0,0),
		(37,1,2027),
		(54,0,1014),
		(53,0,1013),
		(37,1,2027),
		(61,2,0),
		(63,2,1014),
		(25,1,1013),
		(65,2,0),
		(61,2,2027),
		(37,1,0),
		(56,2,2027),
		(53,0,0),
		(37,1,2027),
		(23,1,2027),
		(51,0,0),
		(35,1,2027),
		(53,0,1014),
		(54,0,1013),
		(35,1,2027),
		(63,2,0),
		(65,2,1014),
		(66,2,1013),
		(23,1,0),
		(35,1,2027),
		(63,2,0),
		(65,2,1014),
		(66,2,1013),
		(53,0,0),
		(35,1,2027),
		(51,0,0),
		(49,0,2028),
		(22,1,0),
		(34,1,2027),
		(51,0,1013),
		(53,0,1014),
		(61,2,2027),
		(34,1,0),
		(63,2,1013),
		(22,1,1014),
		(65,2,0),
		(61,2,2027),
		(34,1,0),
		(63,2,1013),
		(65,2,1014),
		(51,0,0),
		(49,0,2027),
		(34,1,0),
		(24,1,2027),
		(48,0,0),
		(36,1,2027),
		(50,0,1013),
		(52,0,1014),
		(36,1,2027),
		(60,2,0),
		(62,2,1013),
		(24,1,1014),
		(64,2,0),
		(36,1,2027),
		(64,2,0),
		(65,2,1013),
		(67,2,1014),
		(55,0,0),
		(69,2,1013),
		(70,2,1014),
		(36,1,0),
		(72,2,1013),
		(69,2,1014),
		(53,0,0),
		(41,0,2027),
		(46,0,0),
		(46,0,1013),
		(41,0,0),
		(41,0,1014),
		(46,0,0),
		(46,0,2027),
		(41,0,0),
		(41,0,1013),
		(46,0,0),
		(46,0,1014),
		(41,0,0),
		(24,1,2027),
		(24,1,1014),
		(24,1,1013),
		(24,1,2027),
		(24,1,1014),
		(29,1,1013),
		(45,0,2027),
		(41,0,0),
		(41,0,1014),
		(45,0,0),
		(45,0,1013),
		(41,0,0),
		(45,0,2027),
		(41,0,0),
		(45,0,1014),
		(41,0,0),
		(41,0,1013),
		(45,0,0),
		(17,1,2027),
		(17,1,1014),
		(17,1,1013),
		(19,1,1014),
		(20,1,1013),
		(21,1,1014),
		(46,0,1013),
		(22,1,0),
		(35,9,43),
		(33,9,0),
		(29,1,1984),
		(41,0,2027),
		(29,1,2027),
		(22,1,2027),
		(29,1,2027),
		(46,0,1014),
		(46,0,1013),
		(48,0,1014),
		(29,1,1013),
		(50,0,0),
		(51,0,1014),
		(20,1,1014),
		(53,0,0),
		(27,1,2027),
		(58,2,0),
		(58,2,2027),
		(60,2,1013),
		(62,2,1014),
		(27,1,0),
		(63,2,1013),
		(65,2,1014),
		(20,1,0),
		(53,0,2027),
		(27,1,0),
		(53,0,2027),
		(54,0,2027),
		(27,1,0),
		(56,0,1013),
		(18,1,1014),
		(58,0,0),
		(25,1,2027),
		(61,2,2027),
		(66,2,1013),
		(25,1,1014),
		(68,2,0),
		(70,2,1013),
		(73,2,1014),
		(18,1,0),
		(25,1,2027),
		(58,0,0),
		(58,0,2027),
		(56,0,2027),
		(25,1,0),
		(54,0,1013),
		(25,1,1014),
		(56,0,0),
		(37,1,2027),
		(54,0,1013),
		(53,0,1014),
		(61,2,2027),
		(37,1,0),
		(63,2,1013),
		(65,2,1014),
		(25,1,0),
		(37,1,2027),
		(61,2,0),
		(53,0,2027),
		(56,2,0),
		(37,1,2027),
		(51,0,2027),
		(23,1,0),
		(35,1,2027),
		(53,0,1014),
		(54,0,1013),
		(35,1,2027),
		(63,2,0),
		(65,2,1014),
		(23,1,1013),
		(66,2,0),
		(63,2,2027),
		(35,1,0),
		(65,2,1014),
		(66,2,1013),
		(53,0,0),
		(35,1,2027),
		(51,0,0),
		(22,1,2027),
		(49,0,0),
		(34,1,2027),
		(51,0,1014),
		(53,0,1013),
		(61,2,2027),
		(34,1,0),
		(63,2,1014),
		(22,1,1013),
		(65,2,0),
		(34,1,2027),
		(61,2,0),
		(63,2,1014),
		(65,2,1013),
		(51,0,0),
		(49,0,2027),
		(34,1,0),
		(24,1,2028),
		(48,0,0),
		(36,1,2027),
		(50,0,1013),
		(52,0,1014),
		(36,1,2027),
		(60,2,0),
		(62,2,1013),
		(24,1,1014),
		(64,2,0),
		(36,1,2027),
		(64,2,0),
		(65,2,1013),
		(67,2,1014),
		(55,0,0),
		(69,2,1013),
		(36,1,1014),
		(70,2,0),
		(72,2,1013),
		(69,2,1014),
		(53,0,0),
		(41,0,2027),
		(46,0,0),
		(41,0,1013),
		(46,0,0),
		(41,0,1014),
		(46,0,0),
		(41,0,2027),
		(46,0,0),
		(41,0,1013),
		(46,0,0),
		(41,0,1014),
		(46,0,0),
		(24,1,2027),
		(24,1,1013),
		(24,1,1014),
		(24,1,2027),
		(24,1,1013),
		(29,1,1014),
		(45,0,2027),
		(41,0,0),
		(41,0,1013),
		(45,0,0),
		(45,0,1014),
		(41,0,0),
		(45,0,2027),
		(41,0,0),
		(45,0,1013),
		(41,0,0),
		(45,0,1014),
		(41,0,0),
		(17,1,2027),
		(17,1,1014),
		(17,1,1013),
		(19,1,1014),
		(20,1,1013),
		(21,1,1014),
		(22,1,1013),
		(34,0,0),
	);

	zelda_Melody_Access : MELODY_NOTES_ACCESS := zelda_Melody'Access;

end ressource;

